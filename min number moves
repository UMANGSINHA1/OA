class Solution {
public:
    int findMinNumMoves(vector<string>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        int ans = 0;

        if (n % 2 == 1) {
            int mid = floor(n / 2);
            for (int i = 0; i < floor(m / 2); i++) {
                if (grid[mid][i] != grid[mid][m - 1 - i]) ans++;
            }
        }

        if (m % 2 == 1) {
            int mid = floor(m / 2);
            for (int i = 0; i < floor(n / 2); i++) {
                if (grid[i][mid] != grid[n - 1 - i][mid]) ans++;
            }
        }

        for (int i = 0; i < floor(n / 2); i++) {
            for (int j = 0; j < floor(m / 2); j++) {
                int countB = 0;
                int countW = 0;

                if (grid[i][j] == 'B') countB++;
                else countW++;
                if (grid[n - 1 - i][j] == 'B') countB++;
                else countW++;
                if (grid[n - 1 - i][m - 1 - j] == 'B') countB++;
                else countW++;
                if (grid[i][m - 1 - j] == 'B') countB++;
                else countW++;

                ans += min(countB, countW);
            }
        }

        return ans;
    }
};


